import enum

class Language(enum.Enum):
    ab = ("Abkhaz")
    ace = ("Acehnese")
    ach = ("Acholi")
    af = ("Afrikaans")
    ak = ("Akan")
    alz = ("Alur")
    am = ("Amharic")
    an = ("Aragonese")
    ar = ("Arabic")
    as_ = ("Assamese")
    awa = ("Awadhi")
    ay = ("Aymara")
    az = ("Azerbaijani")
    ba = ("Bashkir")
    ban = ("Balinese")
    bbc = ("Batak Toba")
    be = ("Belarusian")
    bem = ("Bemba")
    bew = ("Betawi")
    bh = ("Bihari")
    bho = ("Bhojpuri")
    bik = ("Bikol")
    bm = ("Bambara")
    bn = ("Bangla")
    bo = ("Tibetan")
    br = ("Breton")
    brx = ("Bodo")
    bs = ("Bosnian")
    bts = ("Batak Simalungun")
    btx = ("Batak Karo")
    bua = ("Buryat")
    bg = ("Bulgarian")
    ca = ("Catalan")
    ceb = ("Cebuano")
    cgg = ("Kiga")
    chm = ("Meadow Mari")
    ckb = ("Kurdish (Sorani)")
    cnh = ("Hakha Chin")
    cnr = ("Montenegrin")
    co = ("Corsican")
    crh = ("Crimean Tatar")
    crs = ("Seychellois Creole")
    cs = ("Czech")
    cv = ("Chuvash")
    cy = ("Welsh")
    da = ("Danish")
    de = ("German")
    din = ("Dinka")
    doi = ("Dogri")
    dov = ("Dombe")
    dsb = ("Lower Sorbian")
    dv = ("Divehi")
    dz = ("Dzongkha")
    ee = ("Ewe")
    el = ("Greek")
    en = ("English")
    eo = ("Esperanto")
    es = ("Spanish")
    es_mx = ("Spanish (Mexico)")
    et = ("Estonian")
    eu = ("Basque")
    fa = ("Persian")
    ff = ("Fulani")
    fi = ("Finnish")
    fil = ("Filipino")
    fj = ("Fijian")
    fo = ("Faroese")
    fr = ("French")
    fr_ca = ("French (Canada)")
    fy = ("Frisian")
    ga = ("Irish")
    gaa = ("Ga")
    gd = ("Scots Gaelic")
    gl = ("Galician")
    gn = ("Guarani")
    gom = ("Goan Konkani")
    gu = ("Gujarati")
    ha = ("Hausa")
    haw = ("Hawaiian")
    he = ("Hebrew")
    hi = ("Hindi")
    hil = ("Hiligaynon")
    hmn = ("Hmong")
    hne = ("Chhattisgarhi")
    hr = ("Croatian")
    hrx = ("Hunsrik")
    hsb = ("Upper Sorbian")
    ht = ("Haitian Creole")
    hu = ("Hungarian")
    hy = ("Armenian")
    id_ = ("Indonesian")
    ig = ("Igbo")
    ikt = ("Inuinnaqtun")
    ilo = ("Iloko")
    is_ = ("Icelandic")
    it = ("Italian")
    iu = ("Inuktitut")
    iu_latn = ("Inuktitut (Latin)")
    iw = ("Hebrew")
    ja = ("Japanese")
    jw = ("Javanese")
    ka = ("Georgian")
    kk = ("Kazakh")
    km = ("Khmer")
    kmr = ("Kurdish (Northern)")
    kn = ("Kannada")
    ko = ("Korean")
    kri = ("Krio")
    ks = ("Kashmiri")
    ktu = ("Kituba")
    ku = ("Kurdish (Central)")
    ky = ("Kyrgyz")
    la = ("Latin")
    lb = ("Luxembourgish")
    lg = ("Luganda")
    li = ("Limburgish")
    lij = ("Ligurian")
    lmo = ("Lombard")
    ln = ("Lingala")
    lo = ("Lao")
    ltg = ("Latgalian")
    lt = ("Lithuanian")
    luo = ("Luo")
    lus = ("Mizo")
    lv = ("Latvian")
    mai = ("Maithili")
    mak = ("Makassar")
    mg = ("Malagasy")
    mi = ("Maori")
    min = ("Minang")
    mk = ("Macedonian")
    ml = ("Malayalam")
    mn = ("Mongolian")
    mn_cyrl = ("Mongolian (Cyrillic)")
    mni = ("Manipuri (Meitei Mayek)")
    mr = ("Marathi")
    ms = ("Malay")
    ms_arab = ("Malay (Jawi)")
    mt = ("Maltese")
    mww = ("Hmong Daw")
    my = ("Myanmar (Burmese)")
    nb = ("Norwegian")
    ne = ("Nepali")
    new = ("Nepalbhasa (Newari)")
    nl = ("Dutch")
    no = ("Norwegian")
    nr = ("Ndebele (South)")
    nso = ("Northern Sotho")
    nus = ("Nuer")
    ny = ("Chichewa")
    oc = ("Occitan")
    om = ("Oromo")
    or_ = ("Odia")
    otq = ("Quer√©taro Otomi")
    pa = ("Punjabi")
    pa_arab = ("Punjabi (Shahmukhi)")
    pag = ("Pangasinan")
    pam = ("Kapampangan")
    pap = ("Papiamento")
    pl = ("Polish")
    ps = ("Pashto")
    prs = ("Dari")
    pt_br = ("Portuguese (Brazil)")
    pt_pt = ("Portuguese (Portugal)")
    qu = ("Quechua")
    rn = ("Rundi")
    ro = ("Romanian")
    rom = ("Romani")
    ru = ("Russian")
    rw = ("Kinyarwanda")
    sa = ("Sanskrit")
    scn = ("Sicilian")
    sd = ("Sindhi")
    sg = ("Sango")
    shn = ("Shan")
    si = ("Sinhala")
    sk = ("Slovak")
    sl = ("Slovenian")
    sm = ("Samoan")
    sn = ("Shona")
    so = ("Somali")
    sq = ("Albanian")
    sr_cyrl = ("Serbian (Cyrillic)")
    sr_latn = ("Serbian (Latin)")
    ss = ("Swati")
    st = ("Sesotho")
    su = ("Sundanese")
    sv = ("Swedish")
    sw = ("Swahili")
    szl = ("Silesian")
    ta = ("Tamil")
    te = ("Telugu")
    tet = ("Tetum")
    tg = ("Tajik")
    th = ("Thai")
    ti = ("Tigrinya")
    tk = ("Turkmen")
    tl = ("Filipino")
    tlh_latn = ("Klingon (Latin)")
    tlh_piqd = ("Klingon (pIqaD)")
    tn = ("Setswana")
    to = ("Tongan")
    tok = ("Toki Pona")
    tr = ("Turkish")
    ts = ("Tsonga")
    tt = ("Tatar")
    ty = ("Tahitian")
    ug = ("Uyghur")
    uk = ("Ukrainian")
    ur = ("Urdu")
    uz = ("Uzbek")
    vi = ("Vietnamese")
    xh = ("Xhosa")
    yi = ("Yiddish")
    yo = ("Yoruba")
    yua = ("Yucatec Maya")
    yue = ("Chinese (Cantonese, Traditional)")
    zh_cn = ("Chinese (Simplified)")
    zh_lit = ("Chinese (Literary)")
    zh_tw = ("Chinese (Traditional)")
    zu = ("Zulu")


    def __init__(self, lang_name):
        self.lang_name = lang_name        

# maintain a smaller subset of commonly used languages
# for chatbot purposes, trimming to the common list of languages saves tokens
class CommonLanguage(enum.Enum):
    af = ("Afrikaans")
    ar = ("Arabic")
    bg = ("Bulgarian")
    ca = ("Catalan")
    cs = ("Czech")
    cy = ("Welsh")
    da = ("Danish")
    de = ("German")
    el = ("Greek")
    en = ("English")
    eo = ("Esperanto")
    es = ("Spanish")
    et = ("Estonian")
    eu = ("Basque")
    fi = ("Finnish")
    fil = ("Filipino")
    fr = ("French")
    he = ("Hebrew")
    hi = ("Hindi")
    hr = ("Croatian")
    hu = ("Hungarian")
    id_ = ("Indonesian")
    is_ = ("Icelandic")
    it = ("Italian")
    iw = ("Hebrew")
    ja = ("Japanese")
    ko = ("Korean")
    lt = ("Lithuanian")
    ne = ("Nepali")
    nl = ("Dutch")
    no = ("Norwegian")
    pl = ("Polish")
    pt_pt = ("Portuguese")
    ro = ("Romanian")
    ru = ("Russian")
    sk = ("Slovak")
    sl = ("Slovenian")
    sv = ("Swedish")
    th = ("Thai")
    tl = ("Filipino")
    tr = ("Turkish")
    uk = ("Ukrainian")
    vi = ("Vietnamese")
    yue = ("Cantonese")
    zh_cn = ("Chinese")

    def __init__(self, lang_name):
        self.lang_name = lang_name        

class AudioLanguage(enum.Enum):
    af_ZA = (Language.af, "Afrikaans (South Africa)")
    am_ET = (Language.am, "Amharic (Ethiopia)")
    an_ES = (Language.an, "Aragonese (Spain)")
    # arabic
    ar_AE = (Language.ar, "Arabic (United Arab Emirates)")
    ar_BH = (Language.ar, "Arabic (Bahrain)")
    ar_DZ = (Language.ar, "Arabic (Algeria)")
    ar_EG = (Language.ar, "Arabic (Egypt)")
    ar_IQ = (Language.ar, "Arabic (Iraq)")
    ar_JO = (Language.ar, "Arabic (Jordan)")
    ar_KW = (Language.ar, "Arabic (Kuwait)")
    ar_LB = (Language.ar, "Arabic (Lebanon)")
    ar_LY = (Language.ar, "Arabic (Libya)")
    ar_MA = (Language.ar, "Arabic (Morocco)")
    ar_OM = (Language.ar, "Arabic (Oman)")
    ar_QA = (Language.ar, "Arabic (Qatar)")
    ar_SA = (Language.ar, "Arabic (Saudi Arabia)")
    ar_SY = (Language.ar, "Arabic (Syria)")
    ar_TN = (Language.ar, "Arabic (Tunisia)")
    ar_XA = (Language.ar, "Arabic")
    ar_YE = (Language.ar, "Arabic (Yemen)")
    
    as_IN = (Language.as_, "Assamese (India)")
    az_AZ = (Language.az, "Azerbaijani (Azerbaijan)")
    ba_RU = (Language.ba, "Bashkir (Russia)")

    be_BY = (Language.be, "Belarusian (Belarus)")
    bg_BG = (Language.bg, "Bulgarian (Bulgaria)")
    bn_BD = (Language.bn, "Bangla (Bangladesh)")
    bn_IN = (Language.bn, "Bengali (India)")
    bn_ANY = (Language.bn, "Bengali (Any Country)")
    bs_BA = (Language.bs, "Bosnian (Bosnia and Herzegovina)")
    ca_ES = (Language.ca, "Catalan")
    cs_CZ = (Language.cs, "Czech")
    cy_GB = (Language.cy, "Welsh")
    da_DK = (Language.da, "Danish (Denmark)")
    fo_FO = (Language.fo, "Faroese (Faroe Islands)")
    de_AT = (Language.de, "German (Austria)")
    de_CH = (Language.de, "German (Switzerland)")
    de_DE = (Language.de, "German (Germany)")
    el_GR = (Language.el, "Greek")
    en_AU = (Language.en, "English (Australia)")
    en_CA = (Language.en, "English (Canada)")
    en_CB = (Language.en, "English (Carribean)")
    en_GB = (Language.en, "English (UK)")
    en_GB_WLS = (Language.en, "English (Welsh)")
    en_IE = (Language.en, "English (Ireland)")
    en_HK = (Language.en, "English (Hong Kong)")
    en_IN = (Language.en, "English (India)")
    en_KE = (Language.en, "English (Kenya)")
    en_NG = (Language.en, "English (Nigeria)")
    en_US = (Language.en, "English (US)")
    en_NZ = (Language.en, "English (New Zealand)")
    en_PH = (Language.en, "English (Philippines)")
    en_SG = (Language.en, "English (Singapore)")
    en_TZ = (Language.en, "English (Tanzania)")
    en_ZA = (Language.en, "English (South Africa)")
    eo_XX = (Language.eo, "Esperanto")
    # spanish
    es_AR = (Language.es, "Spanish (Argentina)")
    es_BO = (Language.es, "Spanish (Bolivia)")
    es_CL = (Language.es, "Spanish (Chile)")
    es_CO = (Language.es, "Spanish (Colombia)")
    es_CR = (Language.es, "Spanish (Costa Rica)")
    es_CU = (Language.es, "Spanish (Cuba)")
    es_DO = (Language.es, "Spanish (Dominican Republic)")
    es_EC = (Language.es, "Spanish (Ecuador)")
    es_ES = (Language.es, "Spanish (Spain)")
    es_GQ = (Language.es, "Spanish (Equatorial Guinea)")
    es_GT = (Language.es, "Spanish (Guatemala)")
    es_HN = (Language.es, "Spanish (Honduras)")
    es_LA = (Language.es, "Spanish (Latin America)")
    es_MX = (Language.es, "Spanish (Mexico)")
    es_NI = (Language.es, "Spanish (Nicaragua)")
    es_PA = (Language.es, "Spanish (Panama)")
    es_PE = (Language.es, "Spanish (Peru)")
    es_PR = (Language.es, "Spanish (Puerto Rico)")
    es_PY = (Language.es, "Spanish (Paraguay)")
    es_SV = (Language.es, "Spanish (El Salvador)")
    es_US = (Language.es, "Spanish (North America)")
    es_UY = (Language.es, "Spanish (Uruguay)")
    es_VE = (Language.es, "Spanish (Venezuela)")

    et_EE = (Language.et, "Estonian (Estonia)")
    eu_ES = (Language.eu, "Basque (Basque Country)")
    fi_FI = (Language.fi, "Finnish")
    fil_PH = (Language.tl, "Filipino (Philippines)")
    fr_BE = (Language.fr, "French (Belgium)")
    fr_CA = (Language.fr_ca, "French (Canada)")
    fr_CH = (Language.fr, "French (Switzerland)")
    fr_FR = (Language.fr, "French (France)")
    ga_IE = (Language.ga, "Irish (Ireland)")
    gl_ES = (Language.gl, "Galician (Spain)")
    gd_GB = (Language.gd, "Gaelic (UK)")
    gu_IN = (Language.gu, "Gujarati (India)")
    he_IL = (Language.he, "Hebrew (Israel)")
    hi_IN = (Language.hi, "Hindi (India)")
    hr_HR = (Language.hr, "Croatian")
    hu_HU = (Language.hu, "Hungarian")
    hy_AM = (Language.hy, "Armenian (Armenia)")
    id_ID = (Language.id_, "Indonesian")
    is_IS = (Language.is_, "Icelandic")
    it_IT = (Language.it, "Italian")
    iu_Latn_CA = (Language.iu_latn, "Inuktitut (Latin, Canada)")
    iu_Cans_CA = (Language.iu, "Inuktitut (Syllabics, Canada)")
    ja_JP = (Language.ja, "Japanese")
    jv_ID = (Language.jw, "Javanese (Indonesia)")
    ka_GE = (Language.ka, "Georgian (Georgia)")
    ko_KR = (Language.ko, "Korean")
    kk_KZ = (Language.kk, "Kazakh (Kazakhstan)")
    kn_IN = (Language.kn, "Kannada (India)")
    km_KH = (Language.km, "Khmer (Cambodia)")
    la = (Language.la, "Latin")
    lo_LA = (Language.lo, "Lao (Lao People's Democratic Republic")
    lt_LT = (Language.lt, "Lithuanian")
    lv_LV = (Language.lv, "Latvian")
    mk_MK = (Language.mk, "Macedonian (Macedonia)")
    mn_MN = (Language.mn, "Mongolian (Mongolia)")
    ml_IN = (Language.ml, "Malayalam (India)")
    mr_IN = (Language.mr, "Marathi (India)")
    ms_MY = (Language.ms, "Malay")
    mt_MT = (Language.mt, "Maltese (Malta)")
    my_MM = (Language.my, "Burmese (Myanmar [Burma])")
    nan_CN = (Language.zh_cn, "Chinese (Minnan)")
    nb_NO = (Language.nb, "Norwegian (Norway)")
    ne_NP = (Language.ne, "Nepali (Nepal)")
    nl_BE = (Language.nl, "Dutch (Belgium)")
    nl_NL = (Language.nl, "Dutch (Netherlands)")
    or_IN = (Language.or_, "Oriya (India)")
    pa_IN = (Language.pa, "Punjabi (India)")
    pl_PL = (Language.pl, "Polish")
    ps_AF = (Language.ps, "Pashto (Afghanistan)")
    pt_BR = (Language.pt_br, "Portuguese (Brazil)")
    pt_PT = (Language.pt_pt, "Portuguese (Portugal)")
    ro_RO = (Language.ro, "Romanian")
    ru_RU = (Language.ru, "Russian")
    si_LK = (Language.si, "Sinhala (Sri Lanka)")
    sk_SK = (Language.sk, "Slovak")
    sl_SI = (Language.sl, "Slovenian")
    so_SO = (Language.so, "Somali (Somalia)")
    sq_AL = (Language.sq, "Albanian (Albania)")
    sr_RS = (Language.sr_cyrl, "Serbian (Serbia)")
    su_ID = (Language.su, "Sundanese (Indonesia)")
    sv_SE = (Language.sv, "Swedish")
    sw_KE = (Language.sw, "Swahili (Kenya)")
    sw_TZ = (Language.sw, "Swahili (Tanzania)")
    ta_MY = (Language.ta, "Tamil (Malaysia)")
    ta_IN = (Language.ta, "Tamil (India)")
    ta_LK = (Language.ta, "Tamil (Sri Lanka)")
    ta_SG = (Language.ta, "Tamil (Singapore)")
    te_IN = (Language.te, "Telugu (India)")
    th_TH = (Language.th, "Thai")
    tr_TR = (Language.tr, "Turkish (Turkey)")
    tt_RU = (Language.tt, "Tatar (Russia)")
    ur_IN = (Language.ur, "Urdu (India)")
    ur_PK = (Language.ur, "Urdu (Pakistan)")
    uk_UA = (Language.uk, "Ukrainian (Ukraine)")
    uz_UZ = (Language.uz, "Uzbek (Uzbekistan)")
    vi_VN = (Language.vi, "Vietnamese")
    zh_CN = (Language.zh_cn, "Chinese (Mandarin, Simplified)")
    zh_HK = (Language.yue, "Chinese (Cantonese, Traditional)")
    yue_CN = (Language.yue, "Chinese (Cantonese, Simplified)")
    zh_TW = (Language.zh_tw, "Chinese (Taiwanese Mandarin)")
    wuu_CN = (Language.zh_cn, "Chinese (Wu, Simplified)")

    # azure has introduced a bunch of new mandarin locales
    zh_CN_henan = (Language.zh_cn, 'Chinese (Zhongyuan Mandarin Henan, Simplified)')
    zh_CN_liaoning = (Language.zh_cn, 'Chinese (Northeastern Mandarin, Simplified)')
    zh_CN_shaanxi = (Language.zh_cn, 'Chinese (Zhongyuan Mandarin Shaanxi, Simplified)')
    zh_CN_shandong = (Language.zh_cn, 'Chinese (Jilu Mandarin, Simplified)')
    zh_CN_sichuan = (Language.zh_cn, 'Chinese (Southwestern Mandarin, Simplified)')
    zh_CN_guangxi = (Language.zh_cn, 'Chinese (Guangxi Accent Mandarin, Simplified)')
    zh_CN_gansu = (Language.zh_cn, 'Chinese (Lanyin Mandarin Gansu, Simplified)')
    zh_CN_anhui = (Language.zh_cn, 'Chinese (Jianghuai Mandarin Anhui, Simplified)')
    zh_CN_hunan = (Language.zh_cn, 'Chinese (Hunan Accent Mandarin, Simplified)')


    fa_IR = (Language.fa, "Persian (Iran)")
    zu_ZA = (Language.zu, "Zulu (South Africa)")

    def __init__(self, lang, audio_lang_name):
        self.lang = lang
        self.audio_lang_name = audio_lang_name    


AudioLanguageDefaults = {
    Language.ar: AudioLanguage.ar_XA,
    Language.bn: AudioLanguage.bn_BD,
    Language.de: AudioLanguage.de_DE,
    Language.en: AudioLanguage.en_US,
    Language.es: AudioLanguage.es_ES,
    Language.fr: AudioLanguage.fr_FR,
    Language.nl: AudioLanguage.nl_NL,
    Language.sw: AudioLanguage.sw_TZ,
    Language.ta: AudioLanguage.ta_IN,
    Language.ur: AudioLanguage.ur_PK,
    Language.zh_cn: AudioLanguage.zh_CN,
    Language.yue: AudioLanguage.zh_HK,
}

# if only one locale is available, make that the default
language_map_to_audio_language = {}
for audio_language in AudioLanguage:
    if audio_language.lang not in language_map_to_audio_language:
        language_map_to_audio_language[audio_language.lang] = []
    language_map_to_audio_language[audio_language.lang].append(audio_language)
for key, value in language_map_to_audio_language.items():
    if len(value) == 1:
        AudioLanguageDefaults[key] = value[0]

